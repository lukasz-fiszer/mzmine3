import org.gradle.internal.os.OperatingSystem

plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.beryx.runtime" version "1.9.1"
}

group = "io.github.mzmine"
version = "3.0"
description = "MZmine"

// JDK 14+ is needed for jpackage, but we maintain Java 11 source/target
// compatibility to avoid problems with JavaFX Scene Builder
sourceCompatibility = "11"
targetCompatibility = "11"
defaultTasks "jpackage"

// Check the OS
project.ext.osSuffix = OperatingSystem.current().getName().replaceAll(" ", "_")
if (OperatingSystem.current().isMacOsX())
    project.ext.osSuffix = "macOS"
if (OperatingSystem.current().isLinux())
    project.ext.osSuffix = "Linux"
if (OperatingSystem.current().isWindows())
    project.ext.osSuffix = "Windows"
println "OS detected as " + project.ext.osSuffix


repositories {
    maven {
        url = "file://" + projectDir + "/src/main/lib"
    }
    maven { // For jmztab 3.0.9+ (https://github.com/PRIDE-Utilities/jmzTab)
        url = "https://dl.bintray.com/lifs/maven/"
    }
    maven { // For jmzml, etc.
        url = "https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/"
    }
    maven {
        url = "https://repo.maven.apache.org/maven2"
    }
    maven { // For SIRIUS ID modules
        url = "https://bio.informatik.uni-jena.de/repository/libs-oss/"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://www.xypron.de/repository/"
    }
    maven { // For cpdetector
        url = "https://nexus.nuiton.org/nexus/content/groups/releases/"
    }
    maven{ // For jmzTab-m Snapshot
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

ext {
    msdkVersion = "0.0.27"
    cdkVersion = "2.3"
    jmztabVersion = "3.0.9"
    swaggerVersion = "1.5.22"
    okhttpVersion = "2.7.5"
    guavaVersion = "29.0-jre"
    slf4jVersion = "1.7.30"
    poiVersion = "4.1.0"
    batikVersion = "1.11"
    controlsfxVersion = "11.0.1"
    jmzTabmVersion="1.0.6-SNAPSHOT"

    // UUID for upgrades of this package on Windows. Generated by https://www.uuidgenerator.net 
    uuid = "896e9c2d-6db8-4259-a1af-1b5f8112d1e1"
}

dependencies {
    implementation "com.github.graphstream:gs-core:2.0-alpha"
    implementation "com.github.graphstream:gs-ui-javafx:2.0-alpha"
    implementation "org.jfree:jfreechart:1.5.0"
    implementation "org.jfree:jfreechart-fx:1.0.1"
    implementation "org.jfree:fxgraphics2d:1.8"
    implementation "org.jfree:jfreesvg:3.4"
    implementation "com.orsonpdf:orsonpdf:1.9"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation "org.apache.commons:commons-math:2.2"
    implementation "edu.ucar:netcdf4:4.5.5"
    implementation "org.ostermiller:utils:1.07.00"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "nz.ac.waikato.cms.weka:weka-stable:3.8.3"
    implementation "net.sourceforge.jmol:jmol:14.29.27"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-jdk14:$slf4jVersion"
    implementation "org.apache.poi:poi:$poiVersion"
    implementation "org.apache.poi:poi-ooxml:$poiVersion"
    implementation "org.openscience.cdk:cdk-core:$cdkVersion"
    implementation "org.openscience.cdk:cdk-io:$cdkVersion"
    implementation "org.openscience.cdk:cdk-standard:$cdkVersion"
    implementation "org.openscience.cdk:cdk-silent:$cdkVersion"
    implementation "org.openscience.cdk:cdk-formula:$cdkVersion"
    implementation "org.openscience.cdk:cdk-sdg:$cdkVersion"
    implementation "org.openscience.cdk:cdk-renderbasic:$cdkVersion"
    implementation "org.openscience.cdk:cdk-renderawt:$cdkVersion"
    implementation "org.openscience.cdk:cdk-data:$cdkVersion"
    implementation "org.openscience.cdk:cdk-interfaces:$cdkVersion"
    implementation "org.openscience.cdk:cdk-smiles:$cdkVersion"
    implementation "uk.ac.ebi.jmzml:jmzml:1.7.11"
    implementation "org.postgresql:postgresql:9.3-1102-jdbc41"
    implementation "mysql:mysql-connector-java:5.1.34"
    implementation "org.rsc.chemspider:chemspider-api:1.0.0"
    implementation "org.nuiton.thirdparty:REngine:1.8-5"
    implementation "org.nuiton.thirdparty:Rserve:1.8-5"
    implementation "com.github.jbytecode:RCaller:3.0"
    implementation "mzmine:jmprojection:1.0"
    implementation "mzmine:gslibml:0.0.1"
    implementation "uk.ac.ebi.pride:jmztab-modular-model:$jmztabVersion"
    implementation "uk.ac.ebi.pride:jmztab-modular-util:$jmztabVersion"
    implementation "org.apache.xmlgraphics:fop:1.0"
    implementation "org.freehep:freehep-graphicsio-emf:2.4"
    implementation "io.github.msdk:msdk-io-mzml:$msdkVersion"
    implementation "io.github.msdk:msdk-io-netcdf:$msdkVersion"
    implementation "io.github.msdk:msdk-featuredetection-adap3d:$msdkVersion"
    implementation "io.github.msdk:msdk-id-sirius:$msdkVersion"
    implementation "org.xerial:sqlite-jdbc:3.8.11.2"
    implementation "org.du-lab.adap:adap:4.1.4"
    implementation "gnf:clustering:20130919"
    implementation "it.unimi.dsi:fastutil:8.2.2"
    implementation "com.itextpdf:itextpdf:5.5.13.1"
    implementation "org.apache.xmlgraphics:xmlgraphics-commons:2.3"
    implementation "org.apache.xmlgraphics:batik-util:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-transcoder:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-codec:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-ext:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-awt-util:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-dom:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-svggen:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-svg-dom:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-anim:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-rasterizer:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-swing:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-gui-util:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-ttf2svg:$batikVersion"
    implementation "org.apache.xmlgraphics:batik-parser:$batikVersion"
    implementation "net.sf.epsgraphics:epsgraphics:1.2"
    implementation "com.miglayout:miglayout:3.7.4"
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "com.sun.xml.bind:jaxb-core:2.3.0.1"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.2"
    implementation "javax.activation:javax.activation-api:1.2.0"
    implementation "javax.mail:javax.mail-api:1.6.2"
    implementation "io.swagger:swagger-annotations:$swaggerVersion"
    implementation "com.squareup.okhttp:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp:logging-interceptor:$okhttpVersion"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "io.gsonfire:gson-fire:1.8.0"
    implementation "org.threeten:threetenbp:1.3.8"
    implementation "org.controlsfx:controlsfx:$controlsfxVersion"
    implementation "org.drjekyll:fontchooser:2.4"
    implementation "org.json:json:20190722"
    implementation "com.panemu:tiwulfx:3.0" // For DetachableTabPane
    implementation "com.github.oshi:oshi-core:4.5.2" // because the version that is pulled by SIRIUS crashes
    implementation "de.isas.mztab:jmztabm-io:$jmzTabmVersion"
}

/*
 * Remove the xml-apis dependencies to avoid a compilation error in Eclipse.
 * The org.w3c.dom package is present in the java.xml module as well as in these dependencies.
 * That is illegal (https://bugs.eclipse.org/bugs/show_bug.cgi?id=536928).
 */
configurations.all {
    exclude group: "xml-apis", module: "xml-apis"
    exclude group: "xml-apis", module: "xml-apis-ext"
    exclude group: "xom", module: "xom"
    exclude group: "ch.qos.logback", module: "logback-core"
    exclude group: "ch.qos.logback", module: "logback-classic"
    exclude group: "gurobi", module: "gurobi-linux64"
    exclude group: "cplex", module: "cplex"
}


/*
 * Include JavaFX modules
 */
javafx {
    version = "14"
    modules = ["javafx.controls",
               "javafx.swing",
               "javafx.fxml",
               "javafx.web",
               "javafx.graphics"
    ]
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

/*
 * Set the basic Java runtime parameters (heap size etc.)
 */
application {
    mainClassName = "io.github.mzmine.main.MZmineCore"
    applicationName = "MZmine"
}

/*
 * Build the JVM runtime using jlink
 */
runtime {
    options = ["--compress=2", "--vm=server", "--no-header-files", "--no-man-pages", "--output", "jre/jre"]
    modules = ["java.desktop",
               "java.logging",
               "java.net.http",
               "java.rmi",
               "java.sql",
               "java.datatransfer",
               "java.management",
               "java.xml",
               "java.xml.crypto",
               "jdk.xml.dom",
               "java.naming",
               "java.transaction.xa",
               "java.scripting",
               "java.compiler",
               "jdk.jsobject",
               "jdk.jfr",
               "java.security.sasl",
               "java.security.jgss",
               "jdk.unsupported",
               "jdk.unsupported.desktop"]
    jpackage {
        if (OperatingSystem.current().isWindows()) {
            // The WiX toolset must be installed, see https://wixtoolset.org/releases/
            installerType = "msi"
            // additional options for jpackage
            imageOptions = ["--icon", "src/main/resources/MZmineIcon.ico"]
            installerOptions = ["--win-menu",
                                "--win-menu-group", "MZmine",
                                "--win-shortcut",
                                "--win-dir-chooser",
                                "--win-upgrade-uuid", "$uuid",
                                "--license-file", "LICENSE.txt"
            ]
        }
        if (OperatingSystem.current().isMacOsX()) {
            installerType = "dmg"
            // additional options for jpackage
            imageOptions = ["--icon", "src/main/resources/MZmineIcon.icns"]
            installerOptions = ["--license-file", "LICENSE.txt"]
        }
        if (OperatingSystem.current().isLinux()) {
            // for rpm, rpmbuild and rpm tools need to be installed, installerType needs to be set to "rpm"
            installerType = "deb"
            // additional options for jpackage
            imageOptions = ["--icon", "src/main/resources/MZmineIcon.png"]
            installerOptions = ["--linux-shortcut",
                                "--linux-menu-group", "MZmine",
                                "--license-file", "LICENSE.txt",
                                "--linux-deb-maintainer", "plusik@gmail.com"
            ]

        }
        installerName = "MZmine"
        imageName = "MZmine"
        jvmArgs = ["-showversion",
                   "-XX:MaxHeapFreeRatio=100",
                   "-XX:InitialRAMPercentage=30",
                   "-XX:MinRAMPercentage=80",
                   "-XX:MaxRAMPercentage=80",
                   "-enableassertions",
                   "-Djava.util.logging.config.class=io.github.mzmine.main.MZmineLoggingConfiguration",
                   "--enable-preview"
        ]
    }
}

/*
 * This is important in order to copy all .java, .fxml, and help files into the final MZmine jar.
 * The .java files are only for people who want to check the source codes.
 * But the .fxml and help files are required for the GUI.
 */
jar {
    sourceSets.main.resources.srcDirs += ["src/main/java"]
}

/*
 * Add MZmine version number to mzmineversion.properties
 */
processResources {
    filesMatching("mzmineversion.properties") {
        expand(project.properties)
    }
}
